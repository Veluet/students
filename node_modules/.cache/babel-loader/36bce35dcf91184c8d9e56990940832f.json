{"remainingRequest":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/thread-loader/dist/cjs.js!/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/babel-loader/lib/index.js!/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/marceline/Dropbox/ssnull/vue-apps/github/students/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/src/views/Home.vue","mtime":1632720396167},{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/cache-loader/dist/cjs.js","mtime":1632346226385},{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/thread-loader/dist/cjs.js","mtime":1632346226607},{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/babel-loader/lib/index.js","mtime":1632346213603},{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/cache-loader/dist/cjs.js","mtime":1632346226385},{"path":"/Users/marceline/Dropbox/ssnull/vue-apps/github/students/node_modules/vue-loader-v16/dist/index.js","mtime":1632346227724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/marceline/Dropbox/ssnull/vue-apps/github/students/src/views/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home container mx-auto px-4\" id=\"top\">\n    <main-header />\n    <div class=\"md:grid md:grid-flow-col md:grid-cols-2 md:gap-2\">\n      <school-years :students=\"students\" :years=\"years\" :yearRows=\"yearRows\" />\n      <router-view :yearRows=\"yearRows\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport mainHeader from \"../components/mainHeader\";\nimport schoolYears from \"../components/schoolYears\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    mainHeader,\n    schoolYears,\n  },\n  props: {\n    year: String,\n  },\n  data() {\n    return {\n      students: [],\n      years: [],\n      yearRows: {},\n    };\n  },\n  created() {\n    axios.get(\"http://apitest.sertifi.net/api/Students\").then((students) => {\n      // students.data = [\n      //   {\n      //     Id: 1,\n      //     Name: \"Jack\",\n      //     StartYear: 2013,\n      //     EndYear: 2016,\n      //     GPARecord: [3.4, 2.1, 1.2, 3.6],\n      //   },\n      //   {\n      //     Id: 2,\n      //     Name: \"Jill\",\n      //     StartYear: 2010,\n      //     EndYear: 2013,\n      //     GPARecord: [3.3, 2.3, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 3,\n      //     Name: \"Bob\",\n      //     StartYear: 2010,\n      //     EndYear: 2012,\n      //     GPARecord: [2.3, 2.5, 2.8],\n      //   },\n      //   {\n      //     Id: 4,\n      //     Name: \"Alice\",\n      //     StartYear: 2013,\n      //     EndYear: 2016,\n      //     GPARecord: [3.6, 2.9, 3.4, 3.7],\n      //   },\n      //   {\n      //     Id: 5,\n      //     Name: \"Eve\",\n      //     StartYear: 2012,\n      //     EndYear: 2015,\n      //     GPARecord: [3.3, 2.5, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 6,\n      //     Name: \"Malcom\",\n      //     StartYear: 2011,\n      //     EndYear: 2014,\n      //     GPARecord: [3.8, 2.7, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 7,\n      //     Name: \"Don\",\n      //     StartYear: 2009,\n      //     EndYear: 2012,\n      //     GPARecord: [3.1, 2.1, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 8,\n      //     Name: \"Mike\",\n      //     StartYear: 2009,\n      //     EndYear: 2011,\n      //     GPARecord: [3.6, 2.2, 1.1],\n      //   },\n      //   {\n      //     Id: 9,\n      //     Name: \"Stacy\",\n      //     StartYear: 2015,\n      //     EndYear: 2016,\n      //     GPARecord: [3.3, 2.3],\n      //   },\n      //   {\n      //     Id: 10,\n      //     Name: \"Safron\",\n      //     StartYear: 2016,\n      //     EndYear: 2016,\n      //     GPARecord: [3.3],\n      //   },\n      //   {\n      //     Id: 11,\n      //     Name: \"Bill\",\n      //     StartYear: 2012,\n      //     EndYear: 2015,\n      //     GPARecord: [3.6, 2.4, 2.3, 3.7],\n      //   },\n      //   {\n      //     Id: 12,\n      //     Name: \"Quin\",\n      //     StartYear: 2008,\n      //     EndYear: 2012,\n      //     GPARecord: [3.3, 2.7, 1.1, 3.7, 2.4],\n      //   },\n      //   {\n      //     Id: 13,\n      //     Name: \"Erin\",\n      //     StartYear: 2008,\n      //     EndYear: 2011,\n      //     GPARecord: [3.8, 2.9, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 14,\n      //     Name: \"Sharon\",\n      //     StartYear: 2013,\n      //     EndYear: 2016,\n      //     GPARecord: [3.6, 2.3, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 15,\n      //     Name: \"Lilly\",\n      //     StartYear: 2011,\n      //     EndYear: 2014,\n      //     GPARecord: [1.0, 2.5, 1.1, 3.8],\n      //   },\n      //   {\n      //     Id: 16,\n      //     Name: \"Inara\",\n      //     StartYear: 2004,\n      //     EndYear: 2007,\n      //     GPARecord: [3.3, 2.8, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 17,\n      //     Name: \"Harry\",\n      //     StartYear: 2005,\n      //     EndYear: 2007,\n      //     GPARecord: [2.4, 2.9, 1.1],\n      //   },\n      //   {\n      //     Id: 18,\n      //     Name: \"Emma\",\n      //     StartYear: 2007,\n      //     EndYear: 2011,\n      //     GPARecord: [3.8, 2.6, 1.6, 3.7, 2.8],\n      //   },\n      //   {\n      //     Id: 19,\n      //     Name: \"Sharon\",\n      //     StartYear: 2010,\n      //     EndYear: 2013,\n      //     GPARecord: [3.5, 2.8, 1.1, 3.7],\n      //   },\n      //   {\n      //     Id: 20,\n      //     Name: \"Uday\",\n      //     StartYear: 2002,\n      //     EndYear: 2005,\n      //     GPARecord: [3.8, 2.5, 1.8, 3.7],\n      //   },\n      //   {\n      //     Id: 21,\n      //     Name: \"Ross\",\n      //     StartYear: 2003,\n      //     EndYear: 2006,\n      //     GPARecord: [3.3, 2.7, 1.5, 3.7],\n      //   },\n      //   {\n      //     Id: 22,\n      //     Name: \"Michael\",\n      //     StartYear: 2001,\n      //     EndYear: 2004,\n      //     GPARecord: [3.7, 2.5, 1.4, 3.7],\n      //   },\n      //   {\n      //     Id: 23,\n      //     Name: \"Nick\",\n      //     StartYear: 2001,\n      //     EndYear: 2004,\n      //     GPARecord: [3.4, 2.0, 1.0, 3.7],\n      //   },\n      //   {\n      //     Id: 24,\n      //     Name: \"Laura\",\n      //     StartYear: 2010,\n      //     EndYear: 2013,\n      //     GPARecord: [1.5, 2.7, 3.2, 4.0],\n      //   },\n      //   {\n      //     Id: 25,\n      //     Name: \"Kevin\",\n      //     StartYear: 2000,\n      //     EndYear: 2003,\n      //     GPARecord: [3.3, 2.4, 1.6, 3.7],\n      //   },\n      // ];\n\n      // Move response into local variable.\n      let studentData = students.data;\n\n      /* This section won't work, possible to add years that don't actually have attendence. */\n      // // Find the earliest start year and latest end year.\n      // // Reducer returns all years, which has to be done for both start and end\n      // const arrYearSpan = studentData.reduce(\n      //   (accumulator, currentValue) => {\n      //     return [\n      //       Math.min(currentValue, accumulator[0]),\n      //       Math.max(currentValue, accumulator[1]),\n      //     ];\n      //   },\n      //   [Number.MAX_VALUE, Number.MIN_VALUE]\n      // );\n      // console.log(arrYearSpan);\n\n      // // Build an array of all unique plausable years\n      // const range = (start, stop, step) =>\n      //   Array.from(\n      //     { length: (stop - start) / step + 1 },\n      //     (_, i) => start + i * step\n      //   );\n\n      // const allYears = range(arrYearSpan[0], arrYearSpan[1], 1);\n      // console.log(allYears);\n\n      // const yearsData = [\n      //   ...new Set(\n      //     studentData.reduce(\n      //       (arr, item) => arr.concat(item.StartYear, item.EndYear).sort(),\n      //       []\n      //     )\n      //   ),\n      // ];\n      /* */\n\n      /* Start: De-normalize time! */\n\n      // De-normalizing: The GPA Record Array in the students.data\n      // New: Build a list of all Years\n      // Adding:  Attendence by year for each student in students.data\n\n      // Declare yearRows; used to return calculated values.\n      let yearRows = {};\n\n      // Declare allYears; used to generate content.\n      let allYears = [];\n\n      // Declare attendence by year\n      // It will be easier to interpret if this seperate from allYears.\n      // {\n      //   \"2001\": {\n      //     \"students\": [{\"john\" : {\"rollingGPA:\" 5.0}],\n      //     \"rollingGPA\": 5.0,1\n      //     }\n      // }\n\n      studentData.forEach((student) => {\n        const thisStudent = student;\n        const thisStudentName = thisStudent.Name;\n        let attended = [];\n\n        student.GPARecord.forEach((gpa, i) => {\n          const currentYear = thisStudent.StartYear + i;\n\n          if (!allYears.includes(currentYear)) allYears.push(currentYear);\n          attended.push(currentYear);\n\n          // Create the year entry if it doesn't exist in yearRows.\n          if (!(currentYear in yearRows)) {\n            yearRows[currentYear] = {\n              students: [thisStudentName],\n              gpas: [gpa],\n              studentRows: {},\n            };\n\n            yearRows[currentYear].studentRows[thisStudentName] = {\n              Name: thisStudentName,\n              GPA: gpa,\n            };\n            return;\n          }\n\n          // Create the student entry if it doesn't exist in yearRows\n          if (!yearRows[currentYear].students.includes(thisStudent.Name)) {\n            yearRows[currentYear].students.push(thisStudent.Name);\n\n            yearRows[currentYear].studentRows[thisStudentName] = {\n              Name: thisStudentName,\n              GPA: gpa,\n            };\n          }\n\n          // Create the gpa entry, it doesn't exist yet!\n          yearRows[currentYear].gpas.push(gpa);\n        });\n\n        student.averageGPA = student.GPARecord.reduce(\n          (a, v, i) => (a * i + v) / (i + 1)\n        );\n\n        student.attended = attended;\n\n        // console.log(denormalizedGPA);\n      });\n\n      // Sort all years from oldest to newest.\n      this.years = allYears.sort();\n\n      for (const year in yearRows) {\n        yearRows[year].attendence = yearRows[year].students.length;\n\n        const averageGPA = yearRows[year].gpas.reduce(\n          (a, v, i) => (a * i + v) / (i + 1)\n        );\n\n        yearRows[year].averageGPA =\n          Math.round((averageGPA + Number.EPSILON) * 100) / 100;\n      }\n\n      this.yearRows = yearRows;\n\n      /* End: De-normalize time! */\n\n      // const inventory = [\n      //   { name: \"apples\", quantity: 2 },\n      //   { name: \"bananas\", quantity: 0 },\n      //   { name: \"cherries\", quantity: 5 },\n      // ];\n\n      // const result = yearRows.find(({ year }) => year === \"2016\");\n\n      // console.log(result); // { name: 'cherries', quantity: 5 }\n\n      // console.log(allYears);\n      // console.log(studentData);\n\n      // /* This is how the above de-normalization works.\n      // let obj = {};\n      // obj[\"foo\"] = \"bar\";\n\n      // let colors = [\"green\", \"yellow\", \"blue\", \"purple\"];\n      // obj[\"colors\"] = colors;\n\n      // let betterColors = {};\n\n      // obj[\"colors\"].forEach((color, i) => {\n      //   betterColors[2000 + i] = \"test\";\n      // });\n\n      // obj[\"colors\"].splice(0);\n      // obj[\"colors\"] = betterColors;\n\n      // console.log(obj);\n      // /* */\n    });\n  },\n};\n</script>\n"],"sourceRoot":""}]}